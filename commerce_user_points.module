<?php

/**
 * @file
 * Provides Commerce User Points functionality.
 */

use Drupal\node\Entity\Node;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function commerce_user_points_user_insert($entity) {

  // Creat new user points node after registering new user account.
  $email = $entity->getEmail();

  // Save user entity.
  $entity->save();

  // Get user registration points.
  $register_points = \Drupal::config('commerce_user_points.settings')->get('user_register_points');

  // Create new "user point" node with gained points.
  $node_array = [
    'type' => 'user_points',
    'title' => "New account creation for " . $email . ", UID: " . $entity->id(),
    'uid' => $entity->id(),
    'field_earned_points' => $register_points,
    'field_points_acquisition_date' => gmdate('Y-m-d'),
    'field_point_status' => 1,
    'field_point_type' => 'account-creation',
    'field_used_points' => 0,
    'field_validity_date' => gmdate('Y-m-d', strtotime('+1 years')),
  ];

  // Save node
  // $node = entity_create('node', $node_array);.
  $node = Node::create($node_array);
  $node->save();
}

/**
 * Implements hook_node_form_alter().
 *
 * To add the validation for the commerce user points.
 */
function commerce_user_points_form_node_form_alter(array &$form, FormStateInterface $form_state) {

  // Check for the node form type.
  if ($form['#form_id'] == 'node_user_points_edit_form' || $form['#form_id'] == 'node_user_points_form') {
    $form['#validate'][] = '_commerce_user_points_node_form_validate';
  }
}

/**
 * Validate callback for the user points node form.
 */
function _commerce_user_points_node_form_validate($form, FormStateInterface $form_state) {

  $node = '';
  $earnedPoints = $usedPoints = [];

  // Get the node object for the user points.
  $node = $form_state->getFormObject()->getEntity();

  // Check for the node type.
  if ($node->getType() == 'user_points') {

    // To get the form values.
    $values = $form_state->getValues();

    // Check the earned points value.
    if (!empty($values['field_earned_points'])) {
      $earnedPoints = $values['field_earned_points'][0]['value'];
    }

    // Check the used points value.
    if (!empty($values['field_used_points'])) {
      $usedPoints = $values['field_used_points'][0]['value'];
    }

    // Set the validation for the field used points.
    if ($usedPoints > $earnedPoints) {
      $form_state->setErrorByName('field_used_points', t('Please insert the proper used points'));
    }
  }
}

/**
 * Implements hook_mail().
 */
function commerce_user_points_mail($key, &$message, $params) {

  $options = [
    'langcode' => $message['langcode'],
  ];

  switch ($key) {
    case 'commerce_user_points':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('@subject', ['@subject' => $params['subject']], $options);
      $message['body'][] = $params['message'];
      break;
  }
}
